---
- name: Create Oxidized group.
  group:
    name: oxidized
    state: present
    gid: 30000

- name: Create Oxidized user.
  user:
    comment: Oxidized user
    name: oxidized
    group: oxidized
    shell: /sbin/nologin
    create_home: true
    state: present
    uid: 30000

- name: Allow oxidized to sudo
  community.general.sudoers:
    name: allow-sudo-oxidized
    state: present
    user: oxidized
    commands: ALL
  when: not ansible_check_mode
  become: true

- name: Create needed directories.
  file:
    path: "{{ item }}"
    state: directory
    owner: oxidized
    group: oxidized
    mode: u=rwx,g=rx,o=
  loop:
    - "{{ OXIDIZED_CONFIG_PATH }}"
    - "{{ OXIDIZED_IMPORT_MODEL_PATH }}"
    - "{{ OXIDIZED_GIT_LOCAL_REPO }}"

- name: Copy config file.
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: oxidized
    group: oxidized
    mode: u=rwx,g=rx,o=
  loop:
    - src: "{{ OXIDIZED_CONFIG_TEMPLATE }}"
      dst: "{{ OXIDIZED_CONFIG_PATH }}/{{ OXIDIZED_CONFIG_FILE }}"

- name: Copy equipment file.
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: oxidized
    group: oxidized
    mode: u=rwx,g=rx,o=
  loop:
    - src: "{{ OXIDIZED_DB_TEMPLATE }}"
      dst: "{{ OXIDIZED_CONFIG_PATH }}/{{ OXIDIZED_DB_FILE }}"
  when: OXIDIZED_EQUIPMENTS 

- name: Copy SSH keys
  copy:
    content: "{{ item.src }}"
    dest: "{{ item.dst }}"
    owner: oxidized
    group: oxidized
    mode: u=r,g=,o=
  loop:
    - src: "{{ OXIDIZED_GIT_PUBLIC_KEY_TEMPLATE }}"
      dst: "/home/oxidized/.ssh/{{ OXIDIZED_GIT_PUBLIC_KEY_FILE }}"
    - src: "{{ OXIDIZED_GIT_PRIVATE_KEY_TEMPLATE }}"
      dst: "/home/oxidized/.ssh/{{ OXIDIZED_GIT_PRIVATE_KEY_FILE }}"

- name: Copy ssh config
  copy:
    content: |
      Host *
        User oxidized
        StrictHostKeyChecking accept-new
    dest: /home/oxidized/.ssh/config
    owner: oxidized
    group: oxidized
    mode: u=r,g=,o=
  when: OXIDIZED_GIT_USE_REMOTE_REPO

- name: Copy models.
  copy:
    src: "{{ OXIDIZED_IMPORT_MODEL_LOCAL_PATH }}"
    dest: "{{ OXIDIZED_IMPORT_MODEL_PATH }}"
    owner: oxidized
    group: oxidized
    mode: u=rwx,g=,o=
  when: OXIDIZED_MODELS

- name: Clone backup repository
  git:
    dest: "{{ OXIDIZED_GIT_LOCAL_REPO }}"
    key_file: "{{ OXIDIZED_CONFIG_PATH }}/{{ OXIDIZED_GIT_PRIVATE_KEY_FILE }}"
    repo: "{{ OXIDIZED_GIT_REMOTE_REPO }}"
    update: false
    accept_hostkey: true

- name: Create the oxidized container
  containers.podman.podman_container:
    recreate: true
    name: oxidized
    hostname: oxidized
    image: docker.io/oxidized/oxidized:latest
    restart_policy: always
    network: host
    dns_servers: "{{ OXIDIZED_DNS }}"
    ports:
      - "{{ OXIDIZED_LISTEN_PORT }}:{{ OXIDIZED_LISTEN_PORT }}"
    volume:
      - "{{ OXIDIZED_CONFIG_PATH }}/{{ OXIDIZED_CONFIG_FILE }}:{{ OXIDIZED_CONTAINER_CONFIG_PATH }}/config:rw"
      - "{{ OXIDIZED_CONFIG_PATH }}/{{ OXIDIZED_DB_FILE }}:{{ OXIDIZED_CONTAINER_CONFIG_PATH }}/equipments.csv:rw"
      - "/home/oxidized/.ssh:/home/oxidized/.ssh"
      - "{{ OXIDIZED_IMPORT_MODEL_PATH }}:{{ OXIDIZED_CONTAINER_CONFIG_PATH }}/model:rw"
      - "{{ OXIDIZED_GIT_LOCAL_REPO }}:{{ OXIDIZED_CONTAINER_CONFIG_PATH }}/repo:rw"
  tags: molecule-notest
  become: true
